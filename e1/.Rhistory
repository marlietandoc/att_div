setwd("/Volumes/Rock/p/tess_fmri/norming/condc")
filenames = list.files(path = getwd())
normdata_c <- do.call("rbind", lapply(filenames, read.csv))
normdata_c$cond <- 'c'
setwd("/Volumes/Rock/p/tess_fmri/norming/condd")
filenames = list.files(path = getwd())
normdata_d <- do.call("rbind", lapply(filenames, read.csv))
normdata_d$cond <- 'd'
View(normdata_a)
# merge all conditions
normdata <- rbind(normdata_d, normdata_b, normdata_c, normdata_a)
# get rid of attention check trials
normdata <- subset(normdata, normdata$trialcode=='rating')
# trying to make a correlation matrix
library(ggplot2)
# trying to make a correlation matrix
library(ggplot2)
ggplot(normdata, aes(values.1stitem, values.2nditem)) +
geom_raster(aes(fill = response)) +
theme_classic()
normdata$stim1 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.2nditem,
ifelse(normdata$cond=='c', normdata$values.1stitem, NA))
normdata$stim2 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.1stitem,
ifelse(normdata$cond=='c', normdata$values.2nditem, NA))
ggplot(normdata, aes(stim1, stim2)) +
geom_raster(aes(fill = response)) +
theme_classic()
# x axis limits
sp + xlim(min, max)
# y axis limits
sp + ylim(min, max)
xlim(min, max)
bp + ylim(0,50)
normdata <- subset(normdata, normdata$group=='1','2','3')
normdata <- subset(normdata, normdata$subject=='1','2','3')
normdata <- subset(normdata, normdata$subject=="1")
normdata <- subset(normdata, normdata$subject=='1')
normdata <- subset(normdata, normdata$subject=='1','2','3')
normdata <- subset(normdata, normdata$subject=='1&&2')
normdata <- subset(normdata, normdata$group=='1', '2','3''4)
# trying to make a correlation matrix
library(ggplot2)
ggplot(normdata, aes(values.1stitem, values.2nditem)) +
geom_raster(aes(fill = response)) +
theme_classic()
normdata$stim1 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.2nditem,
ifelse(normdata$cond=='c', normdata$values.1stitem, NA))
normdata$stim2 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.1stitem,
ifelse(normdata$cond=='c', normdata$values.2nditem, NA))
ggplot(normdata, aes(stim1, stim2)) +
geom_raster(aes(fill = response)) +
theme_classic()
normdata <- subset(normdata, normdata$group=='1', '2','3')
#Synesthesia Winter 2018 Data
colscheme2 <- c('deeppink3', 'pink')
#### Add AV Data ####
# Set Directory to where the data files are so that you can add all the files
setwd("/Volumes/Rock/p/tess_fmri/norming/conda")
# Get all the Files from that directory and make their names into a list
filenames = list.files(path = getwd())
# Call that function on all of the files in your list of file names, and turn it into one large data frame
normdata_a <- do.call("rbind", lapply(filenames, read.csv))
normdata_a$cond <- 'a'
setwd("/Volumes/Rock/p/tess_fmri/norming/condb")
filenames = list.files(path = getwd())
normdata_b <- do.call("rbind", lapply(filenames, read.csv))
normdata_b$cond <- 'b'
setwd("/Volumes/Rock/p/tess_fmri/norming/condc")
filenames = list.files(path = getwd())
normdata_c <- do.call("rbind", lapply(filenames, read.csv))
normdata_c$cond <- 'c'
setwd("/Volumes/Rock/p/tess_fmri/norming/condd")
filenames = list.files(path = getwd())
normdata_d <- do.call("rbind", lapply(filenames, read.csv))
normdata_d$cond <- 'd'
# merge all conditions
normdata <- rbind(normdata_d, normdata_b, normdata_c, normdata_a)
# get rid of attention check trials
normdata <- subset(normdata, normdata$trialcode=='rating')
# trying to make a correlation matrix
library(ggplot2)
ggplot(normdata, aes(values.1stitem, values.2nditem)) +
geom_raster(aes(fill = response)) +
theme_classic()
normdata$stim1 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.2nditem,
ifelse(normdata$cond=='c', normdata$values.1stitem, NA))
normdata$stim2 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.1stitem,
ifelse(normdata$cond=='c', normdata$values.2nditem, NA))
ggplot(normdata, aes(stim1, stim2)) +
geom_raster(aes(fill = response)) +
theme_classic()
keep <- subset(normdata, normdata$subject=='1')
library(ggplot2)
# trying to make a correlation matrix
library(ggplot2)
ggplot(normdata, aes(values.1stitem, values.2nditem)) +
geom_raster(aes(fill = response)) +
theme_classic()
normdata$stim1 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.2nditem,
ifelse(normdata$cond=='c', normdata$values.1stitem, NA))
normdata$stim2 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.1stitem,
ifelse(normdata$cond=='c', normdata$values.2nditem, NA))
ggplot(normdata, aes(stim1, stim2)) +
geom_raster(aes(fill = response)) +
theme_classic()
View(keep)
View(keep)
keep <- subset(normdata, normdata$subject=='1','2')
keep <- subset('1','2','3')
keep <- c('1','2','3')
#keep specific objects
keep <- subset(df, subject %in% keep)
df[df$subject=='1']
#keep specific objects
keep <- subset(df, subject%in%keep)
df[df$subject=='1']
#keep specific objects
keep <- subset(df, subject%in%keep)
df(df$subject=='1')
#keep specific objects
keep <- subset(normdata, subject%in%keep)
(normdata$subject=='1')
normdata <- subset(normdata, normdata$trialcode=='rating')
#keep specific objects
rm(data1,data2)
#keep specific objects
rm('1','2')
keep <- x[x %in% c(1,2,5)]
keep <- subject[x %in% c(1,2,5)]
keep <- subject[subject %in% c(1,2,5)]
keep <- subset[normdata %in% c(1,2,5)]
keep <- r[normdata %in% c(1,2,5)]
keep <- c[normdata %in% c(1,2,5)]
keep <- c[normdata %in% r(1,2,5)]
rm(list = c('1'))
rm(normdata = c('1'))
rm(subject = c('1'))
rm(subject =('1'))
rm(subject=('1'))
library(ggplot2)
library(ggplot2)
normdata <- subset(normdata, normdata$group=='1')
normdata <- subset(normdata, normdata$group=='1&&2')
View(keep)
View(keep)
View(normdata)
View(normdata)
View(normdata_a)
View(normdata)
#Synesthesia Winter 2018 Data
colscheme2 <- c('deeppink3', 'pink')
#### Add AV Data ####
# Set Directory to where the data files are so that you can add all the files
setwd("/Volumes/Rock/p/tess_fmri/norming/conda")
# Get all the Files from that directory and make their names into a list
filenames = list.files(path = getwd())
# Call that function on all of the files in your list of file names, and turn it into one large data frame
normdata_a <- do.call("rbind", lapply(filenames, read.csv))
normdata_a$cond <- 'a'
setwd("/Volumes/Rock/p/tess_fmri/norming/condb")
filenames = list.files(path = getwd())
normdata_b <- do.call("rbind", lapply(filenames, read.csv))
normdata_b$cond <- 'b'
setwd("/Volumes/Rock/p/tess_fmri/norming/condc")
filenames = list.files(path = getwd())
normdata_c <- do.call("rbind", lapply(filenames, read.csv))
normdata_c$cond <- 'c'
setwd("/Volumes/Rock/p/tess_fmri/norming/condd")
filenames = list.files(path = getwd())
normdata_d <- do.call("rbind", lapply(filenames, read.csv))
normdata_d$cond <- 'd'
# merge all conditions
normdata <- rbind(normdata_d, normdata_b, normdata_c, normdata_a)
# get rid of attention check trials
normdata <- subset(normdata, normdata$trialcode=='rating')
# trying to make a correlation matrix
library(ggplot2)
ggplot(normdata, aes(values.1stitem, values.2nditem)) +
geom_raster(aes(fill = response)) +
theme_classic()
normdata$stim1 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.2nditem,
ifelse(normdata$cond=='c', normdata$values.1stitem, NA))
normdata$stim2 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.1stitem,
ifelse(normdata$cond=='c', normdata$values.2nditem, NA))
ggplot(normdata, aes(stim1, stim2)) +
geom_raster(aes(fill = response)) +
theme_classic()
normdata <- subset(normdata, normdata$subject=='1')
View(normdata)
normdata <- subset(normdata, normdata$subject=="1")
normdata <- subset(normdata, normdata$subject=="1")
normdata <- subset(normdata, normdata$trialcode=='rating')
# get rid of attention check trials
normdata <- subset(normdata, normdata$trialcode=='rating')
#Synesthesia Winter 2018 Data
colscheme2 <- c('deeppink3', 'pink')
#### Add AV Data ####
# Set Directory to where the data files are so that you can add all the files
setwd("/Volumes/Rock/p/tess_fmri/norming/conda")
# Get all the Files from that directory and make their names into a list
filenames = list.files(path = getwd())
# Call that function on all of the files in your list of file names, and turn it into one large data frame
normdata_a <- do.call("rbind", lapply(filenames, read.csv))
normdata_a$cond <- 'a'
setwd("/Volumes/Rock/p/tess_fmri/norming/condb")
filenames = list.files(path = getwd())
normdata_b <- do.call("rbind", lapply(filenames, read.csv))
normdata_b$cond <- 'b'
setwd("/Volumes/Rock/p/tess_fmri/norming/condc")
filenames = list.files(path = getwd())
normdata_c <- do.call("rbind", lapply(filenames, read.csv))
normdata_c$cond <- 'c'
setwd("/Volumes/Rock/p/tess_fmri/norming/condd")
filenames = list.files(path = getwd())
normdata_d <- do.call("rbind", lapply(filenames, read.csv))
normdata_d$cond <- 'd'
# merge all conditions
normdata <- rbind(normdata_d, normdata_b, normdata_c, normdata_a)
# get rid of attention check trials
normdata <- subset(normdata, normdata$trialcode=='rating')
# trying to make a correlation matrix
library(ggplot2)
ggplot(normdata, aes(values.1stitem, values.2nditem)) +
geom_raster(aes(fill = response)) +
theme_classic()
normdata$stim1 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.2nditem,
ifelse(normdata$cond=='c', normdata$values.1stitem, NA))
normdata$stim2 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.1stitem,
ifelse(normdata$cond=='c', normdata$values.2nditem, NA))
ggplot(normdata, aes(stim1, stim2)) +
geom_raster(aes(fill = response)) +
theme_classic()
View(normdata)
# get rid of unwanted objects
normdata[normdata$subject=='1']
View(normdata)
View(normdata)
View(normdata)
#Synesthesia Winter 2018 Data
colscheme2 <- c('deeppink3', 'pink')
#### Add AV Data ####
# Set Directory to where the data files are so that you can add all the files
setwd("/Volumes/Rock/p/tess_fmri/norming/conda")
# Get all the Files from that directory and make their names into a list
filenames = list.files(path = getwd())
# Call that function on all of the files in your list of file names, and turn it into one large data frame
normdata_a <- do.call("rbind", lapply(filenames, read.csv))
normdata_a$cond <- 'a'
setwd("/Volumes/Rock/p/tess_fmri/norming/condb")
filenames = list.files(path = getwd())
normdata_b <- do.call("rbind", lapply(filenames, read.csv))
normdata_b$cond <- 'b'
setwd("/Volumes/Rock/p/tess_fmri/norming/condc")
filenames = list.files(path = getwd())
normdata_c <- do.call("rbind", lapply(filenames, read.csv))
normdata_c$cond <- 'c'
setwd("/Volumes/Rock/p/tess_fmri/norming/condd")
filenames = list.files(path = getwd())
normdata_d <- do.call("rbind", lapply(filenames, read.csv))
normdata_d$cond <- 'd'
# merge all conditions
normdata <- rbind(normdata_d, normdata_b, normdata_c, normdata_a)
# get rid of attention check trials
normdata <- subset(normdata, normdata$trialcode=='rating')
# get rid of unwanted objects
normdata[normdata$subject=='1']
# trying to make a correlation matrix
library(ggplot2)
ggplot(normdata, aes(values.1stitem, values.2nditem)) +
geom_raster(aes(fill = response)) +
theme_classic()
normdata$stim1 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.2nditem,
ifelse(normdata$cond=='c', normdata$values.1stitem, NA))
normdata$stim2 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.1stitem,
ifelse(normdata$cond=='c', normdata$values.2nditem, NA))
ggplot(normdata, aes(stim1, stim2)) +
geom_raster(aes(fill = response)) +
theme_classic()
# get rid of unwanted objects
keep <- normdata[normdata$subject=='1']
View(keep)
normdata <- normdata[normdata$subject=='1']
# get rid of attention check trials
normdata <- subset(normdata, normdata$trialcode=='rating')
# get rid of unwanted objects
normdata <- normdata[normdata$subject=='1']
normdata <- normdata[normdata$subject=='1']
View(normdata)
View(normdata)
View(normdata)
View(normdata)
View(normdata)
View(normdata)
#Synesthesia Winter 2018 Data
colscheme2 <- c('deeppink3', 'pink')
#### Add AV Data ####
# Set Directory to where the data files are so that you can add all the files
setwd("/Volumes/Rock/p/tess_fmri/norming/conda")
# Get all the Files from that directory and make their names into a list
filenames = list.files(path = getwd())
# Call that function on all of the files in your list of file names, and turn it into one large data frame
normdata_a <- do.call("rbind", lapply(filenames, read.csv))
normdata_a$cond <- 'a'
setwd("/Volumes/Rock/p/tess_fmri/norming/condb")
filenames = list.files(path = getwd())
normdata_b <- do.call("rbind", lapply(filenames, read.csv))
normdata_b$cond <- 'b'
setwd("/Volumes/Rock/p/tess_fmri/norming/condc")
filenames = list.files(path = getwd())
normdata_c <- do.call("rbind", lapply(filenames, read.csv))
normdata_c$cond <- 'c'
setwd("/Volumes/Rock/p/tess_fmri/norming/condd")
filenames = list.files(path = getwd())
normdata_d <- do.call("rbind", lapply(filenames, read.csv))
normdata_d$cond <- 'd'
# merge all conditions
normdata <- rbind(normdata_d, normdata_b, normdata_c, normdata_a)
# get rid of attention check trials
normdata <- subset(normdata, normdata$trialcode=='rating')
# trying to make a correlation matrix
library(ggplot2)
ggplot(normdata, aes(values.1stitem, values.2nditem)) +
geom_raster(aes(fill = response)) +
theme_classic()
normdata$stim1 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.2nditem,
ifelse(normdata$cond=='c', normdata$values.1stitem, NA))
normdata$stim2 <- ifelse(normdata$cond=='d'|normdata$cond=='a'|normdata$cond=='b', normdata$values.1stitem,
ifelse(normdata$cond=='c', normdata$values.2nditem, NA))
ggplot(normdata, aes(stim1, stim2)) +
geom_raster(aes(fill = response)) +
theme_classic()
View(normdata_a)
View(normdata)
library(plyr)
library(dplyr)
library(ggplot2)
library(jtools)
#Lantern - skeleton
library(plyr)
library(dplyr)
library(ggplot2)
library(jtools)
#Global drop levels of strings before reading in any data
options(stringsAsFactors = FALSE)
#Reads in data and filters trials we don't want (MIGHT NEED TO CHANGE THIS)
wd <- setwd("~/Desktop/Lantern Data Final Sample") #sets WD
nback_files <- list.files(recursive=TRUE, pattern = "*n-back") #Creates list of all nback files
prime_files <- list.files(recursive=TRUE, pattern = "*prime") #Creates list of all prime files
nback_data <-do.call(rbind.fill,lapply(nback_files,read.csv)) # Makes big dataframe of all nback data
prime_data <-do.call(rbind.fill,lapply(prime_files,read.csv)) #Makes big dataframe of all prime data
#filter prime data only by trials that is correct
correct_prime_trials = filter(prime_data, response_correct == 1)
#Make summary dataframe to be able to run stats on and graph (i.e. each row is a participant with their primability score and age)
primability_score_age = correct_prime_trials %>%
group_by(participant) %>%
summarize(mean_old = mean(difficulty[which(appeared_in_n_back_task == 1)]),
mean_new = mean(difficulty[which(appeared_in_n_back_task == 0)]),
age = age[1])
primability_score_age$num_correct = correct_prime_trials %>%
group_by(participant) %>% tally()
primability_score_age <- mutate(primability_score_age, primability_score = mean_new - mean_old)
primability_score_age <- mutate(primability_score_age, is_adult = ifelse(age < 10, "0", "1"))
# Compare kids + adults primability index (i.e. mean difficulty on new items - mean difficulty on old items)
#do a t.test or use lmer function
#graph this
# Compare kids + adults primability index by splitting the prime test trials into blocks (first half and second half)
# use lmer function
#graph this
correct_block_one = filter(correct_prime_trials, position < 23)
correct_block_two = filter(correct_prime_trials, position > 22)
primability_block_one = correct_block_one %>%
group_by(participant) %>%
summarize(mean_old = mean(difficulty[which(appeared_in_n_back_task == 1)]),
mean_new = mean(difficulty[which(appeared_in_n_back_task == 0)]),
age = age[1])
primability_block_one <- mutate(primability_block_one, primability_score = mean_new - mean_old)
primability_block_one <- mutate(primability_block_one, is_adult = ifelse(age < 10, "0", "1"))
primability_block_two = correct_block_two %>%
group_by(participant) %>%
summarize(mean_old = mean(difficulty[which(appeared_in_n_back_task == 1)]),
mean_new = mean(difficulty[which(appeared_in_n_back_task == 0)]),
age = age[1])
primability_block_two <- mutate(primability_block_two, primability_score = mean_new - mean_old)
primability_block_two <- mutate(primability_block_two, is_adult = ifelse(age < 10, "0", "1"))
kids_prime_data = filter(correct_prime_trials, age<10)
adults_prime_data = filter(correct_prime_trials, age>10)
kids_mean_per_position = kids_prime_data %>%
group_by(position) %>%
summarize(mean_old = mean(difficulty[which(appeared_in_n_back_task == 1)]),
mean_new = mean(difficulty[which(appeared_in_n_back_task == 0)]))
adults_mean_per_position = adults_prime_data %>%
group_by(position) %>%
summarize(mean_old = mean(difficulty[which(appeared_in_n_back_task == 1)]),
mean_new = mean(difficulty[which(appeared_in_n_back_task == 0)]))
kids_mean_per_position %>%
ggplot() +
geom_point(aes(x=position, y=mean_old), color = 'sandybrown')+
stat_smooth(aes(x= position, y=mean_old), method = 'loess', formula = y ~ x, size = 1, color = "sandybrown")+
#geom_abline(intercept = 6.099, slope = .0075, color = 'sandybrown') +
geom_point(aes(x=position, y=mean_new), color = 'darkturquoise') +
stat_smooth(aes(x= position, y=mean_new), method = 'loess', formula = y ~ x, size = 1, color = "darkturquoise")+
#geom_abline(intercept = 6.44056, slope = .00333, color = 'darkturquoise')+
annotate("text", x = -.5, y = 6.2, label="primed", color = 'sandybrown', hjust = 0)+
annotate("text", x = -.5, y = 6.525, label="unprimed", color = 'darkturquoise', hjust = 0)+
labs(x = "position", y = "simplicity")+
theme_classic()+
ggtitle("kids")
adults_mean_per_position %>%
ggplot() +
geom_point(aes(x=position, y=mean_old), color = 'sandybrown')+
stat_smooth(aes(x= position, y=mean_old), method = 'loess', formula = y ~ x, size = 1, color = "sandybrown")+
#geom_abline(intercept = 5.8098, slope = -.00039, color = 'sandybrown') +
geom_point(aes(x=position, y=mean_new), color = 'darkturquoise') +
stat_smooth(aes(x= position, y=mean_new), method = 'loess', formula = y ~ x, size = 1, color = "darkturquoise")+
#geom_abline(intercept = 5.9055, slope = -.00039, color = 'darkturquoise')+
annotate("text", x = -.5, y = 5.77, label="primed", color = 'sandybrown', hjust = 0)+
annotate("text", x = -.5, y = 5.95, label="unprimed", color = 'darkturquoise', hjust = 0)+
labs(x = 'position', y = 'simplicity')+
theme_classic()+
ggtitle("adults")
##Difficulty by image
average_difficulty_by_image = correct_prime_trials %>%
group_by(image_name) %>%
summarize(kids_mean_old = mean(difficulty[which(appeared_in_n_back_task == 1 & age<10)]),
kids_mean_new = mean(difficulty[which(appeared_in_n_back_task == 0 & age<10)]),
adults_mean_old = mean(difficulty[which(appeared_in_n_back_task == 1 & age>10)]),
adults_mean_new = mean(difficulty[which(appeared_in_n_back_task == 0 & age>10)]))
average_difficulty_by_image <- mutate(average_difficulty_by_image, kids_primability = kids_mean_new - kids_mean_old, adults_primability = adults_mean_new - adults_mean_old)
average_difficulty_by_image %>%
ggplot() +
geom_point(aes(x=image_name, y=adults_primability), color = 'darkturquoise')+
geom_point(aes(x=image_name, y=kids_primability), color = 'sandybrown')+
labs(x = '', y = 'average primability index')+
theme_classic()+
theme(axis.text.x=element_blank())+
theme(axis.ticks.x=element_blank())+
ggtitle("image analysis")
##Proportion correct by image
kids_proportion_correct_by_image = kids_prime_data %>%
group_by(image_name) %>%
tally()
kids_proportion_correct_by_image <- mutate(kids_proportion_correct_by_image, proportion = n/60)
adults_proportion_correct_by_image = adults_prime_data %>%
group_by(image_name) %>%
tally()
adults_proportion_correct_by_image <- mutate(adults_proportion_correct_by_image, proportion = n/61)
combined_proportion_correct_by_image = data.frame(matrix(ncol=0, nrow=46))
combined_proportion_correct_by_image$image_name = adults_proportion_correct_by_image$image_name
combined_proportion_correct_by_image$kids_proportion = kids_proportion_correct_by_image$proportion
combined_proportion_correct_by_image$adults_proportion = adults_proportion_correct_by_image$proportion
combined_proportion_correct_by_image %>%
ggplot() +
geom_point(aes(x=image_name, y=kids_proportion), color = 'darkturquoise')+
geom_point(aes(x=image_name, y=adults_proportion), color = 'sandybrown')+
#geom_abline(intercept = 5.8098, slope = -.00039, color = 'sandybrown') +
#annotate("text", x = -.5, y = 5.77, label="primed", color = 'sandybrown', hjust = 0)+
labs(x = '', y = 'probability of correct response')+
theme_classic()+
theme(axis.text.x=element_blank())+
theme(axis.ticks.x=element_blank())+
ggtitle("image analysis 2")
primability_score_age %>%
ggplot() +
geom_point(aes(x=participant, y=primability_score), color = 'darkturquoise')+
labs(x = 'participant', y = 'primability')+
theme_classic()+
theme(axis.text.x=element_blank())+
theme(axis.ticks.x=element_blank())+
ggtitle("primability by participant")
set_A = filter(correct_prime_trials, set == "A")
set_B = filter(correct_prime_trials, set == "B")
set_A = filter(correct_prime_trials, set == "A")
View(set_A)
View(set_A)
t.test(set_A$difficulty, set_B$difficulty)
unique(correct_prime_trials$condition)
condition_0 = filter(correct_prime_trials, condition == 0)
condition_2 = filter(correct_prime_trials, condition == 2)
condition_1 = filter(correct_prime_trials, condition == 1)
condition_3 = filter(correct_prime_trials, condition == 3)
t.test(condition_0$difficulty, condition_1$difficulty)
t.test(condition_0$difficulty, condition_2$difficulty)
t.test(condition_0$difficulty, condition_3$difficulty)
t.test(condition_0$difficulty, condition_3$difficulty)
t.test(condition_1$difficulty, condition_2$difficulty)
t.test(condition_1$difficulty, condition_3$difficulty)
t.test(condition_2$difficulty, condition_3$difficulty)
p<-ggplot(data=average_difficulty_by_image, aes(x=image_name, y=adults_primability)) +
geom_bar(stat="identity")
p
p<-ggplot(data=average_difficulty_by_image, aes(x=image_name, y=adults_primability), color = sandybrown) +
geom_bar(stat="identity")
p
average_difficulty_by_image %>%
ggplot() +
geom_bar(aes(x=image_name, y=adults_primability), color = 'darkturquoise')+
geom_bar(aes(x=image_name, y=kids_primability), color = 'sandybrown')+
labs(x = '', y = 'average primability index')+
theme_classic()+
theme(axis.text.x=element_blank())+
theme(axis.ticks.x=element_blank())+
ggtitle("image analysis")
average_difficulty_by_image %>%
ggplot() +
geom_bar(aes(x=image_name, y=adults_primability), color = 'darkturquoise', stat = "identity")+
geom_bar(aes(x=image_name, y=kids_primability), color = 'sandybrown', stat = "identity")+
labs(x = '', y = 'average primability index')+
theme_classic()+
theme(axis.text.x=element_blank())+
theme(axis.ticks.x=element_blank())+
ggtitle("image analysis")
View(average_difficulty_by_image)
